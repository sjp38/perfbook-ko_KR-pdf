Introduction
============

This repository is a git repository for distribution of a PDF file that built
from Korean translation[1] of `Is Parallel Programming Hard, And, If So, What
Can You Do About It?`[2].  Operating a repository for build output with git is
hilarious thinking.  However, there is no available dimain and server for now.
So, just do it for now.


Translation Progress
====================

Whole chapters and appendices of the first edition of the book are translated
('perfbook-1st-edition.pdf') and we were further wordsmithing it.  Because the
second edition is released, however, we started translating it from the
scratch, and stopped the wordsmithing of 1st edition.

Second Edition
--------------

Translation is in progress.  'perfbook.pdf' in this directory is the compiled
PDF file.

- Chapter  1: How To Use This Book (translated)
- Chapter  2: Introduction (translated)
- Chapter  3: Hardware and its Habits (translated)
- Chapter  4: Tools of the Trade (translating)


First Edition
-------------

Translation is done.  'perfbook-1st-edition.pdf' in this directory is the
compiled PDF file.

- Chapter  1: How To Use This Book (1st polishing done)
- Chapter  2: Introduction (1st polishing done)
- Chapter  3: Hardware and its Habits (1st polishing done)
- Chapter  4: Tools of the Trade (1st polishing done)
- Chapter  5: Counting (1st polishing done)
- Chapter  6: Partitioning and Synchronization Design (1st polishing done)
- Chapter  7: Locking (1st polishing done)
- Chapter  8: Data Ownership (1st polishing done)
- Chapter  9: Deferred Processing (1st polishing done)
- Chapter 10: Data Structures (1st polishing done)
- Chapter 11: Validation (1st polishing done)
- Chapter 12: Formal Verification (1st polishing done)
- Chapter 13: Putting It All Together (1st polishing done)
- Chapter 14: Advanced Synchronization (1st polishing done)
- Chapter 15: Parallel Real-time Computing
- Chapter 16: Ease of Use
- Chapter 17: Conflicting Visions of the Future
- Appendix A. Important Questions
- Appendix B. "Toy" RCU Implementations
- Appendix C. Why Memory Barriers?
- Appendix D. Read-Copy Update Implementations
- Appendix E. Read-Copy Update in Linux
- Appendix G. Glossary and Bibliography

[1] https://github.com/sjp38/perfbook-ko_KR
[2] https://www.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html
